#!/usr/bin/env python3
from subprocess import check_output
import os, re

color = os.environ.get('color', 'white')

# Define font awesome icons
def span(data):
    return f'<span color=\'{data["color"]}\'>{data["icon"]} </span>'
FA = dict(unknown=  dict(icon='?', color='white'),
          lightning=dict(icon='', color='yellow'),
          plug=     dict(icon='', color='white'),
          battery= [dict(icon='', color=color),
                    dict(icon='', color=color),
                    dict(icon='', color=color),
                    dict(icon='', color=color),
                    dict(icon='', color=color)])

info = check_output(['acpi'], universal_newlines=True).strip().split('\n')[0]
if info:
    pattern = re.compile(r'Battery \d+: (?P<state>\w+(?: \w+)*), (?P<percentage>\d+)%')
    matches = list(pattern.finditer(info))[0]
    state = matches.group('state')
    percentage = int(matches.group('percentage'))
else:
    state = 'Unknown'

match state:
    case "Discharging":
        icon = span(FA['battery'][int(percentage-0.0001) // (100 // len(FA['battery']))])
    case "Full":
        icon = span(FA['plug'])
    case "Unknown":
        icon = span(FA['unknown'])
    case _:
        icon = f'{span(FA["lightning"])}{span(FA["plug"])}'

def color(percent):
    if percent < 10: return "#FF0000"
    if percent < 20: return "#FF3300"
    if percent < 40: return "#FF9900"
    return "#FFFFFF"

print(f'{icon} <span color=\'{color(percentage)}\'>{percentage}%</span>')


